#!/usr/bin/env python3
import argparse
import os
import sys

pkg_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))  # noqa
sys.path.insert(0, pkg_root)  # noqa

from lib.config import Config
from lib.database import PostgresDatabase

NAME = sys.argv[0].split('/')[-1]
CLI = argparse.ArgumentParser(
    description=f"`{NAME}` is an admin tool for database operations on the Query Service."
)
CLI.add_argument(
    'database',
    choices=['serve', 'test'],
    help="The serve database is the database that serves traffic, the test database is used for, well, tests."
)
CLI.add_argument(
    'action',
    choices=['initialize', 'clear'],
    help="DANGER: clearing the database will clear out all tables. Initializing resets the initial database schemas."
)

if __name__ == '__main__':
    options = CLI.parse_args(sys.argv[1:])

    db_uri = {
        'serve': Config.serve_database_uri,
        'test': Config.test_database_uri
    }[options.database]

    db = PostgresDatabase(db_uri)

    if options.action == 'initialize':
        with db.transaction() as transaction:
            transaction.initialize_database()

    elif options.action == 'clear':
        conf = input("Are you sure that you want to do this? [Y/n] ")
        if conf != "Y":
            print("Ok, whew.")
            sys.exit(0)
        with db.transaction() as transaction:
            transaction.clear_database()

    print(f"Completed action {options.action} on database: {options.database}")
