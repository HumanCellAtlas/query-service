image: ubuntu:bionic

variables:
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  DEBIAN_FRONTEND: noninteractive
  TERRAFORM_VERSION: 0.12.0
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  TF_CLI_ARGS_apply: --auto-approve

stages:
  - test
  - deploy
  - integration_test

before_script:
  - source /etc/profile
  - apt-get update > /dev/null
  - apt-get install --yes sudo jq moreutils gettext make virtualenv postgresql zip unzip httpie git > /dev/null
  - service postgresql start
  - sudo -u postgres createuser --superuser $(whoami)
  - curl -Os https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
  - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin
  - virtualenv --python=python3.6 .venv
  - source .venv/bin/activate
  - pip install --quiet -r requirements-dev.txt
  - if [[ $CI_COMMIT_REF_NAME =~ ^(staging|integration|prod)$ ]]; then export DEPLOYMENT_STAGE=$CI_COMMIT_REF_NAME; fi
  - source environment
  - make build-chalice-config init-db load-test-data init-tf
  - aws secretsmanager get-secret-value --secret-id ${APP_NAME}/${STAGE}/gcp-credentials.json | jq -r .SecretString > gcp-credentials.json
  - export GOOGLE_APPLICATION_CREDENTIALS=$(pwd -P)/gcp-credentials.json

test:
  stage: test
  script:
    - make test

deploy:
  stage: deploy
  only:
    refs:
      - master
      - integration
      - staging
  script:
    - make deploy
    - make apply-migrations

integration_test:
  stage: integration_test
  script:
    - make integration-test
  only:
    - master
    - integration
    - staging
