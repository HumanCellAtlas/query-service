image: ubuntu:19.04

cache:
  paths:
    - .cache

variables:
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  DEBIAN_FRONTEND: noninteractive
  TERRAFORM_VERSION: 0.12.0
  LC_ALL: C.UTF-8
  LANG: C.UTF-8
  TF_CLI_ARGS_apply: --auto-approve

stages:
  - test
  - deploy
  - integration_test
  - release

before_script:
  - source /etc/profile
  - apt-get update > /dev/null
  - apt-get install --yes sudo jq moreutils gettext make virtualenv postgresql zip unzip httpie git > /dev/null
  - service postgresql start
  - sudo -u postgres createuser --superuser $(whoami)
  - curl -Os https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
  - unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /usr/local/bin
  - virtualenv --python=python3.7 .venv
  - source .venv/bin/activate
  - pip install --quiet -r requirements-dev.txt
  - if [[ $CI_COMMIT_REF_NAME =~ ^(staging|integration|prod)$ ]]; then export DEPLOYMENT_STAGE=$CI_COMMIT_REF_NAME; fi
  - source environment
  - aws secretsmanager get-secret-value --secret-id ${APP_NAME}/${STAGE}/gcp-credentials.json | jq -r .SecretString > gcp-credentials.json
  - export GOOGLE_APPLICATION_CREDENTIALS=$(pwd -P)/gcp-credentials.json

test:
  stage: test
  except:
    - tags
  script:
    - make init-db migrate-db load-test-data init-tf
    - make test

.deploy:
  stage: deploy
  except:
    - tags
    - schedules
  script:
    - make deploy

deploy_dev:
  extends: .deploy
  only:
    refs:
      - master
      - integration
      - staging
    variables:
      - $CI_API_V4_URL == "https://allspark.dev.data.humancellatlas.org/api/v4"

deploy_prod:
  extends: .deploy
  only:
    refs:
      - prod
    variables:
      - $CI_API_V4_URL == "https://allspark-prod.data.humancellatlas.org/api/v4"

integration_test:
  stage: integration_test
  except:
    - tags
  script:
    - make integration-test
  only:
    - master
    - integration
    - staging
    - prod

.release:
  stage: release
  script:
    - git remote set-url origin https://$GITHUB_TOKEN@github.com/HumanCellAtlas/query-service
    - export branch=$(echo $RELEASE_COMMAND | cut -d ' ' -f 2)
    - export status=$(scripts/status.py $branch --owner HumanCellAtlas --repo dcp)
    - if [[ $branch != master && $RELEASE_COMMAND != *"--force"* && $status != "success" ]]; then
    -   echo "DCP Integration test returned status ${status}";
    -   exit 1
    - fi
    - ${RELEASE_COMMAND}
  except:
    - schedules
  when: manual
  allow_failure: true

release_integration:
  extends: .release
  when: on_success
  variables:
    RELEASE_COMMAND: scripts/release.sh master integration --no-deploy --skip-account-verification
  only:
    - master

force_release_integration:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/release.sh master integration --force --no-deploy --skip-account-verification
  only:
    - master

release_staging:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/release.sh integration staging --no-deploy --skip-account-verification
  only:
    - integration

force_release_staging:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/release.sh integration staging --force --no-deploy --skip-account-verification
  only:
    - integration

release_prod:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/release.sh staging prod --no-deploy --skip-account-verification
  only:
    - staging

force_release_prod:
  extends: .release
  variables:
    RELEASE_COMMAND: scripts/release.sh staging prod --force --no-deploy --skip-account-verification
  only:
    - staging
