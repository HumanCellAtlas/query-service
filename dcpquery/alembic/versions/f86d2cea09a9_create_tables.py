"""create tables

Revision ID: f86d2cea09a9
Revises:
Create Date: 2019-05-08 21:54:18.415650

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f86d2cea09a9'
down_revision = '000000000000'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bundles',
                    sa.Column('fqid', sa.String(), nullable=False),
                    sa.Column('uuid', postgresql.UUID(), nullable=False),
                    sa.Column('version', sa.DateTime(), nullable=False),
                    sa.Column('manifest', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.Column('aggregate_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.PrimaryKeyConstraint('fqid'),
                    sa.UniqueConstraint('fqid')
                    )
    op.create_table('processes',
                    sa.Column('process_uuid', postgresql.UUID(), nullable=False),
                    sa.PrimaryKeyConstraint('process_uuid')
                    )
    op.create_table('dcp_metadata_schema_types',
                    sa.Column('name', sa.String(), nullable=False),
                    sa.PrimaryKeyConstraint('name')
                    )
    op.create_table('files',
                    sa.Column('fqid', sa.String(), nullable=False),
                    sa.Column('uuid', postgresql.UUID(), nullable=False),
                    sa.Column('version', sa.DateTime(), nullable=False),
                    sa.Column('dcp_schema_type_name', sa.String(), nullable=True),
                    sa.Column('body', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
                    sa.Column('content_type', sa.String(), nullable=True),
                    sa.Column('size', sa.BigInteger(), nullable=True),
                    sa.Column('extension', sa.String(), nullable=True),
                    sa.ForeignKeyConstraint(['dcp_schema_type_name'], ['dcp_metadata_schema_types.name'], ),
                    sa.PrimaryKeyConstraint('fqid'),
                    sa.UniqueConstraint('fqid')
                    )
    op.create_table('process_file_join_table',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('process_uuid', postgresql.UUID(), nullable=True),
                    sa.Column('process_file_connection_type',
                              sa.Enum('INPUT_ENTITY', 'OUTPUT_ENTITY', 'PROTOCOL_ENTITY', name='connectiontypeenum'),
                              nullable=True),
                    sa.Column('file_uuid', postgresql.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['process_uuid'], ['processes.process_uuid'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('process_uuid', 'process_file_connection_type', 'file_uuid',
                                        name='process_file_connection_type_uc')
                    )
    op.create_table('process_join_table',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('child_process_uuid', postgresql.UUID(), nullable=True),
                    sa.Column('parent_process_uuid', postgresql.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['child_process_uuid'], ['processes.process_uuid'], ),
                    sa.ForeignKeyConstraint(['parent_process_uuid'], ['processes.process_uuid'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('bundle_file_links',
                    sa.Column('bundle_fqid', sa.String(), nullable=False),
                    sa.Column('file_fqid', sa.String(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['bundle_fqid'], ['bundles.fqid'], ),
                    sa.ForeignKeyConstraint(['file_fqid'], ['files.fqid'], ),
                    sa.PrimaryKeyConstraint('bundle_fqid', 'file_fqid')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bundle_file_links')
    op.drop_table('process_join_table')
    op.drop_table('process_file_join_table')
    op.execute('DROP TABLE files CASCADE;')
    op.drop_table('dcp_metadata_schema_types')
    op.drop_table('processes')
    op.drop_table('bundles')
    op.execute("DROP TYPE connectiontypeenum CASCADE;")
    # ### end Alembic commands ###
